# /etc/nginx/conf.d/default.conf

upstream backend {
    server app:3000;
}

# Server block cho HTTP (cổng 80) - Xác thực Certbot và redirect sang HTTPS
server {
    listen 80;
    server_name bigads.io.vn; # Tên miền của bạn

    # Phục vụ yêu cầu xác thực của Certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # Trỏ đến volume dùng chung với Certbot
    }

    # Chuyển hướng tất cả các yêu cầu HTTP khác sang HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block cho HTTPS (cổng 443)
server {
    listen 443 ssl http2;
    server_name bigads.io.vn; # Tên miền của bạn

    # Đường dẫn đến chứng chỉ SSL
    ssl_certificate /etc/letsencrypt/live/bigads.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bigads.io.vn/privkey.pem;

    # Cấu hình SSL an toàn (ví dụ)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Thêm header HSTS sau khi test kỹ
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    client_max_body_size 50M;

    # Phục vụ file tĩnh client
    location / {
        root /usr/share/nginx/html/client;
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public";
    }

    # Phục vụ file uploads
    location /uploads/ {
        alias /usr/share/nginx/html/uploads/;
        try_files $uri =404;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Chuyển tiếp API đến backend
    location /api/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_cache_bypass $http_upgrade;
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}