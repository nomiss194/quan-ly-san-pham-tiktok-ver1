# version: '3.9' # Thuộc tính version không còn cần thiết

services:
  db:
    image: postgres:17-alpine
    container_name: tiktok_db
    restart: always
    env_file:
      - ./tiktok-product-manager/.env.docker
    volumes:
      - db_data:/var/lib/postgresql/data # Docker-managed volume
    networks:
      - tiktok-net
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
        interval: 10s
        timeout: 5s
        retries: 5

  app:
    build:
      context: ./tiktok-product-manager
      dockerfile: Dockerfile
    container_name: tiktok_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./tiktok-product-manager/.env.docker
    volumes:
      - uploads_data:/usr/src/app/server/public/uploads # Docker-managed volume
    networks:
      - tiktok-net

  nginx:
    image: nginx:stable-alpine
    container_name: tiktok_nginx
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"   # Map cổng 80 host -> 80 container (cho HTTP challenge/redirect)
      - "443:443" # Map cổng 443 host -> 443 container (cho HTTPS)
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./tiktok-product-manager/client:/usr/share/nginx/html/client:ro
      - uploads_data:/usr/share/nginx/html/uploads:ro
      - certbot_certs:/etc/letsencrypt:ro             # Đọc chứng chỉ SSL
      - certbot_webroot:/var/www/certbot:ro           # Đọc file xác thực Certbot
    networks:
      - tiktok-net

  certbot:
    image: certbot/certbot
    container_name: tiktok_certbot
    volumes:
      - certbot_certs:/etc/letsencrypt             # Ghi chứng chỉ SSL
      - certbot_webroot:/var/www/certbot           # Ghi file xác thực Certbot
    # Lệnh entrypoint sẽ chạy định kỳ để gia hạn cert
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  tiktok-net:
    driver: bridge

volumes:
  db_data:
  uploads_data:
  certbot_certs:
  certbot_webroot: